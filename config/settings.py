"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
#import django_heroku
#from decouple import config
#from environs import Env
#from email.policy import default
from pathlib import Path
#from dj_database_url import parse as db_url



#env = Env() #new nestor
#env.read_env() #new nestor
#exemple
#SECRET_KEY = config('SECRET_KEY')
#DEBUG = config('DEBUG', default=False, cast=bool)
#EMAIL_HOST = config('EMAIL_HOST', default='localhost')
#EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
#exemple




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret! TD2HlVC3aNhvqDdkeYtVDEtxl15EeF1gzp9gS0JsAbo
#SECRET_KEY = config("SECRET_KEY")
SECRET_KEY = "SECRET_KEY"

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = config("DEBUG", default=False, cast=bool)
DEBUG=False

ALLOWED_HOSTS = ['help-for-bug-blog.herokuapp.com', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',#new nestor
    'django.contrib.staticfiles',
    #3rd party
    'crispy_forms',#new nestor
    #local
    'accounts',#new nestor
    'pages', #new nestor
    'articles', #new nestor
    'ckeditor',# new nestoro
]

#new nestor
AUTH_USER_MODEL = 'accounts.CustomUser' #nestor

#new nestor

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',#new nestor
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]
#decouple config
CORS_ORIGIN_ALLOW_ALL = True 

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],#new nestor
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database local
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
   'default': {
       #"default": config("DATABASE_URL"),
       'ENGINE': 'django.db.backends.sqlite3',
       'NAME':BASE_DIR / 'db.sqlite3',
   }
}

#configuration databases postgresql lors du deployement 
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME':config('NAME'),
#         'USER':config('USER'),
#         'PASSWORD':config('PASSWORD'),
#         'HOST':config('HOST'),
#         'PORT':'5432',
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lome' #'UTC' new nestor  

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
#new nestor
 # we add this  after adding 'crispy' to the INSTALLED-APPS
CRISPY_TEMPLATE_PACK = 'bootstrap4'
#new nestor

STATIC_URL = '/static/'

#nestor configuration necessaire: essai pour  une int√©gration de templates toute faites
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    #str(BASE_DIR.joinpath('static')), # new nestor

]
STATIC_ROOT = str(BASE_DIR.joinpath('staticfiles'))#new nestor
#config for deployement 
#django_heroku.settings(locals())
#del DATABASES['default']['OPTIONS']['sslmode']

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' #New nestor
#nestor
#new nestor
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
#new nestor
#exemple de configuration des emails pour le deployement 
#EMAIL_HOST = config('EMAIL_HOST', default='localhost')
#EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
#EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
#EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
#EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)
#new nestor SMTP SERVER  CONFIG
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = '2022nanani@gmail.com'


#EMAIL_HOST = 'smtp.sendgrid.net'
#EMAIL_HOST_USER = 'apikey'
#EMAIL_HOST_PASSWORD = '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'
#EMAIL_PORT = 587
#EMAIL_USE_TLS = True

# EMAIL_HOST = config('EMAIL_HOST', default='localhost')
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
# EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
# EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)





#new nestor SMPT SERVER CONFIG

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"
